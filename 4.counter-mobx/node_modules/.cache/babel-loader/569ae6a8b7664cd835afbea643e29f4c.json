{"ast":null,"code":"import _initializerDefineProperty from \"/home/yh/reactMobx/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/yh/reactMobx/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/yh/reactMobx/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action, makeObservable } from \"mobx\";\nlet CounterStore = (_class = (_temp = class CounterStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_count\", _descriptor, this);\n\n    makeObservable(this);\n  }\n\n  get count() {\n    return this._count;\n  }\n\n  increment() {\n    this._count++;\n    console.log(this._count);\n  }\n\n  decrement() {\n    this._count--;\n    console.log(this._count);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_count\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 3;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"increment\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"increment\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decrement\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"decrement\"), _class.prototype)), _class); // 생성을 해서 리턴을 해야한다\n\nexport default new CounterStore();","map":{"version":3,"sources":["/home/yh/reactMobx/4.counter-mobx/src/store/CounterStore.js"],"names":["observable","action","makeObservable","CounterStore","constructor","count","_count","increment","console","log","decrement"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,cAA7B,QAAmD,MAAnD;IAEMC,Y,sBAAN,MAAMA,YAAN,CAAmB;AACjBC,EAAAA,WAAW,GAAG;AAAA;;AACZF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAKD,MAAIG,KAAJ,GAAY;AACV,WAAO,KAAKC,MAAZ;AACD;;AAGDC,EAAAA,SADA,GACY;AACV,SAAKD,MAAL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB;AACD;;AAGDI,EAAAA,SADA,GACY;AACV,SAAKJ,MAAL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB;AACD;;AAtBgB,C,gFAKhBN,U;;;;;WACQ,C;;8DAMRC,M,gJAMAA,M,gGAOH;;AACA,eAAe,IAAIE,YAAJ,EAAf","sourcesContent":["import { observable, action, makeObservable } from \"mobx\";\n\nclass CounterStore {\n  constructor() {\n    makeObservable(this);\n  }\n\n  @observable\n  _count = 3;\n\n  get count() {\n    return this._count;\n  }\n\n  @action\n  increment() {\n    this._count++;\n    console.log(this._count);\n  }\n\n  @action\n  decrement() {\n    this._count--;\n    console.log(this._count);\n  }\n}\n\n// 생성을 해서 리턴을 해야한다\nexport default new CounterStore();\n"]},"metadata":{},"sourceType":"module"}